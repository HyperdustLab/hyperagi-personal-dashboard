export default {
  index: {
    connectWallet: 'Connect Wallet',
    dashboard: 'Dashboard',
    home: 'Go Home',
    disconnect: 'Disconnect',
    searchSpaceTxt: 'Please enter SID or name to search',
    uploadAvatar: 'Upload Avatar',
  },
  space: {
    name: 'Name',
    coverImage: 'Cover Image',
    description: 'Description',
    addSpaceTitle: 'Add Space',
    blockchainNetwork: 'Blockchain Network',
    updateSpace: 'Update Space',
    release: 'Release',
    delSpace: 'Delete Space',
    appType: 'Space Type',
    sid: 'SID',
    blockNumber: 'Block Number',
    transactionHash: 'Transaction Hash',
    image: 'Image',
    start: 'Start to use',
  },
  spaceForm: {
    name: 'Please enter the name',
    coverImage: 'Please upload the cover image',
    image: 'Please upload the image',
    description: 'Please enter the description',
    downloadLink: 'Please enter the download link',
    currentVersion: 'Please enter the current version',
    blockchainId: 'Please select a blockchain network',
    parameters: 'Invalid parameter information, please enter a valid json parameter',
  },
  contractDeployment: {
    title: 'Space contract deployment',
    deploymentErc721: 'Deploy ERC-721 Contract',
    deploymentErc1155: 'Deploy ERC-1155 Contract',
    deployment: 'Deployment',
    deploymentSuccess: 'Deployment Success',
    contractAddress: 'Contract address',
  },
  order: {
    orderId: 'Epoch ID',
    orderStatus: 'Epoch Status',
    price: 'Price',
    time: 'Service Time',
    orderAmount: 'Hypergas fee',
    endTime: 'End Time',
    nodeId: 'Node ID',
    blockchainNetwork: 'Blockchain Network',
    settlementRatio: 'Settlement Ratio',
    settlementAmount: 'Settlement Amount',
    chargeHistory: 'Charge History',
    transactionHash: 'Transaction Hash',
  },
  chargeHistory: {
    epochTime: 'Epoch Time',
    num: 'Num',
    epochAmount: 'Epoch Hypergas Fee',
  },
  minerNode: {
    ip: 'IP',
    status: 'Use Status',
    nodeType: 'Node Type',
    hardwareinformation: 'Hardware information',
    minerNftPledge: 'Miner NFT Pledge List',
    blockchainNetwork: 'Blockchain Network',
    nodeId: 'Node ID',
    monitoringBtnTxt: 'Monitoring',
    networkStatus: 'Network Status',
    noResourcesTxt: 'network is busy，please wait for a moment',
    incomeAmount: 'Income Amount',
    serviceStatus: 'Status',
    batchActive: 'Active',
    batchInactive: 'Inactive',
    renderTest: 'Render Test',
    totalSecurityAmount: 'Security Amount',
  },
  minerNodeForm: {
    title: 'Miner Node',
    publish: 'Publish',
    blockchainRuleTxt: 'Please select a blockchain network',
    priceRuleTxt: 'Please enter the price',
    successTxt: 'Publish Success',
    updatePirce: 'Update Price',
    minerTokenAddress: 'Miner Token Address',
    minerTokenId: 'Miner Token ID',
  },
  nft: {
    name: 'Name',
    contractAddress: 'Contract address',
    type: 'NFT Type',
    num: 'Num',
    coverImage: 'Cover Image',
    tokenId: 'Token ID',
    select: 'Select',
  },
  uploadAvatar: {
    title: 'Upload Avatar',
  },
  spaceInfo: {
    title: 'Space Info',
    spaceType: 'Space Type',
    spaceName: 'Space Name',
    enterSpace: 'Visit',
    defaultName: 'Island',
    defaultType: 'Central Space',
    coordinate: 'Coordinate',
    contractAddress: 'Contract Address',
    tokenId: 'Token ID',
    owner: 'Owner',
    description: 'Description',
    spaceContractAddress: 'Space Contract Address',
    archivesContractAddress: 'Archives Contract Address',
    erc721: 'ERC-721 Contract',
    erc1155: 'ERC-1155 Contract',
    successTxt: 'Congratulations, you have completed the space deployment',
    startEditTxt: 'Enter the space',
    uniswapNFTId: 'Uniswap NFT ID',
    uniswapNFTIdRuleTxt: 'Please Input Uniswap NFT ID',
  },
  selectreSourceType: {
    title: 'Access Hyperdust Network',
    renderDuration: 'Duration',
    comprehensivePrice: 'Comprehensive Price',
    memory: 'Memory',
    hardDisk: 'Hard Disk',
    videoMemory: 'Video Memory',
    frameRate: 'Frame rate',
    description: 'Description',
    core: 'Core',
    duration: 'Time',
    durationUnit: 'Epoch',
    browseMap: 'Launch',
    noSourceTxt: 'busy',
    durationRuleTxt: 'Please enter duration',
    total: 'Hyper Gas Fee is',
    epochTxt: 'One Epoch equals to 6.4 minutes',
    title1: "Don't have HYPT Token yet?",
    title2: 'Click Collect',
  },
  menu: {
    spaceManage: 'Space Manage',
    renderNode: 'Render Node',
    minerNode: 'Hyper Node',
    minerManage: 'Miner Manage',
    renderOrder: 'Epoch',
    monitoring: 'Monitoring',
    baserewardReleaseRecord: 'Reward Claim',
    NftTransactionRecord: 'NFT Transaction',
    shareManage: 'Share Manage',
    shareRecord: 'Affiliate',
    nodeService: 'Cloud Mining',
    home: 'Share',
    minerReward: 'Reward',
    promotionIncentive: 'Promotion Incentive',
    cloudMiningRevenue: 'Cloud Mining Revenue',
    cloudMiningAward: 'Cloud Mining Award',
    cloudMiningCommission: 'Cloud Mining Commission',
    vestingWalletRecord: 'Vesting Wallet',
    securityDepositRecord: 'Security Deposit',
    myBuyNftTransaction: 'Buy',
    mySellNftTransaction: 'Sell',
    minerNFTBuyRecord: 'Miner NFT Buy Record',
    minerNFTInviteRecord: 'Miner NFT Invite Record',
  },
  minerNFTBuyRecord: {
    payAmount: 'Pay Amount',
    price: 'Price',
    invitationAddress: 'Invitation Address',
    invitationAmount: 'Invitation Amount',
    num: 'Num',
    productId: 'Product ID',
    transactionHash: 'Transaction Hash',
    blockchainNetwork: 'Blockchain Network',
    tokenName: 'Token Name',
    nftList: 'NFT List',
    account: 'Pay Account',
    createTime: 'Create Time',
  },
  minerServiceNft: {
    tokenAddress: 'Token Address',
    tokenName: 'Token Name',
    tokenCoverImage: 'Cover Image',
    tokenId: 'Token ID',
    blockchainNetwork: 'Blockchain Network',
    select: 'Select',
  },
  minerNftPledge: {
    tokenAddress: 'Token Address',
    tokenId: 'Token ID',
    tokenName: 'Token Name',
    tokenCoverImage: 'Cover Image',
    allowedRedemptionTime: 'Allowed Redemption Time',
    blockchainNetwork: 'Blockchain Network',
    transactionHash: 'Transaction Hash',
    createTime: 'Create Time',
    selectOne: 'Please select at least one record',
    redemption: 'Redemption',
    status: 'Status',
    redemptionSuccess: 'Redemption Success',
  },
  basicRewardRecord: {
    amount: 'Amount',
    nodeId: 'Node ID',
    blockchainNetwork: 'Blockchain Network',
    sumAmount: 'Sum Amount',
  },
  shareRecord: {
    walletAddress: 'Wallet Address',
    createTime: 'Create Time',
  },
  mintSpaceForm: {
    title: 'Mint Space',
    locationNumber: 'Location Number',
    paymentAmount: 'Payment Amount',
    pledgePrice: 'Pledge Price',
    airdropPrice: 'Airdrop Price',
    payType: 'Pay Type',
    payTxt: 'Buy',
    pledgeTxt: 'Stak',
    mintTxt: 'Mint',
  },
  startMintSpace: {
    title: 'Start Mint Space',
    spaceMint: 'mint<br>space',
    deployErc721: 'deploy<br>ERC-721 contract',
    deployErc1155: 'deploy<br> ERC-1155 contract',
    mintSpaceSuccess: 'success',
  },

  NftTransactionRecord: {
    nftCoverImage: 'Cover Image',
    nftName: 'NFT Name',
    tokenId: 'Token ID',
    contractAddress: 'Contract Address',
    transactionRecordId: 'Transaction ID',
    buyer: 'Buyer',
    seller: 'Seller',
    amount: 'Amount',
    price: 'Price',
    num: 'Num',
    commission: 'Hyper Gas fee',
    blockchain: 'Blockchain',
    createTime: 'Create Time',
    payAmount: 'Pay Amount',
    revenueAmount: 'Revenue Amount',
    transactionHash: 'Transaction Hash',
  },
  monitoring: {
    gpuUSETxt: 'CPU utilization (%)',
    cpuName: 'CPU',
    memoryUSETxt: 'Memory utilization (%)',
    memoryName: 'Memory',
    GPUUSETxt: 'GPU utilization (%)',
    gpuName: 'GPU',
    hardDiskUSETxt: 'Disk utilization (%)',
    hardDiskName: 'HardDisk',
    uplinkNetworkTxt: 'Network out (KB)',
    uplinkNetworkName: 'Network out',
    downlinkNetworkTxt: 'Network in (KB)',
    downlinkNetworkName: 'Network in',
    '1h': '1h',
    '3h': '3h',
    '12h': '12h',
    '1d': '1d',
    '3d': '3d',
    '1w': '1w',
  },
  baserewardReleaseRecord: {
    amount: 'Total Amount',
    releaseAmount: 'Claim Amount',
    releaseTime: 'Claim Time',
    release: 'Claim',
    noBaserewardReleaseRecordTxt: 'There is no amount to Claim',
    sumAmount: 'Sum Amount',
    sumReleased: 'Sum Claim',
    currentlyReleasable: 'Claimable',
    releaseSuccessTxt: 'Claim Success',
    totalReward: 'Total Reward',
    totalSecurityAmount: 'Total Security Amount',
    canReleaseAmount: 'Can Claim Amount',
    toBeReleasedAmount: 'To Be Claim Amount',
    blockchainNetwork: 'Blockchain Network',
  },
  securityDepositRecord: {
    nodeId: 'Node ID',
    totalSecurityAmount: 'Total Security Amount',
    amount: 'Amount',
    createTime: 'Create Time',
    blockchainNetwork: 'Blockchain Network',
    blockNumber: 'Block Number',
  },
  buyMinner: {
    days: 'Days',
    title: 'Buy Minner',
    num: 'Num',
    price: 'Price',
    payAmount: 'Pay Amount',
    expirationDate: 'Expiration date',
    buySuccess: 'Buy Success',
    buyBtnTxt: 'Mine',
    becomeMiner: 'Congratulations on becoming a mine owner',
    goHome: 'Home',
    goNodeService: 'View purchase history',
  },
  modeService: {
    nodeServiceId: 'Node Service ID',
    serviceTime: 'Service Time',
    status: 'Status',
    payAmount: 'Pay Amount',
    price: 'Price',
    num: 'Buy Num',
    day: 'Day',
    earnings: 'Earnings',
    distributionNodeList: 'Distribution Node List',
    releaseEarnings: 'Claim Earnings',
    nodeList: 'Node List',
  },
  userNodeService: {
    nodeId: 'Node ID',
    buyNum: 'Buy Num',
    earnings: 'Earnings',
  },
  share: {
    title: 'Share Link',
    copySuccess: 'Copy Success',
  },
  cloudMinerBuyCommission: {
    buyer: 'Buyer',
    buyDate: 'Buy Date',
    payAmount: 'Pay Amount',
    commissionRatio: 'Commission Ratio',
    commission: 'Commission',
    status: 'Status',
    createTime: 'Create Time',
    release: 'Claim',
    sumReleased: 'Sum Claim',
    noBaserewardReleaseRecordTxt: 'There is no amount to Claim',
    totalCommission: 'Total Commission',
    totalPayAmount: 'Total Pay Amount',
  },
  cloudMiningRevenue: {
    amount: 'Total Amount',
    releaseAmount: 'Claim Amount',
    releaseTime: 'Claim Time',
    release: 'Claim',
    noBaserewardReleaseRecordTxt: 'There is no amount to Claim',
    sumAmount: 'Sum Amount',
    sumReleased: 'Sum Claim',
    currentlyReleasable: 'Claimable',
    releaseSuccessTxt: 'Claim Success',
    totalReward: 'Total Reward',
    totalSecurityAmount: 'Total Security Amount',
    canReleaseAmount: 'Can Claim Amount',
    toBeReleasedAmount: 'To Be Claim Amount',
    status: 'Status',
  },
  cloudMiningAward: {
    blockAmount: 'Block Amount',
    incomeAmount: 'Income Amount',
    nodeServiceId: 'Node Service ID',
    nodeId: 'Node ID',
    num: 'Num',
    blockNumber: 'Block Number',
    totalReward: 'Total Reward',
  },
  cloudMiningCommission: {
    blockAmount: 'Block Amount',
    incomeAmount: 'Income Amount',
    nodeId: 'Node ID',
    num: 'Num',
    blockNumber: 'Block Number',
    totalReward: 'Total Reward',
    subAccount: 'Sub Account',
  },
  vestingWalletRecord: {
    totalAllocation: 'Total Allocation',
    released: 'Released',
    releasable: 'Releasable',
    account: 'Account',
    businessName: 'Business Name',
    contractAddress: 'Contract Address',
    blockchainNetwork: 'Blockchain Network',
    release: 'Claim',
    allowableReleaseTime: 'Allowable Release Time',
  },
  model_reports: {
    name: 'AI Model',
    short_name: 'Short Name',
    state: 'State',
    server_rows: 'Server Rows',
    num_blocks: 'Num Blocks',
    repository: 'Repository',
    dht_prefix: 'DHT Prefix',
    official: 'Official',
    limited: 'Limited',
    userAI: 'Uses AI',
    startAI: 'Start to use',
    miningByGenerate: 'Mining by generate',
    miningByPurchaseTxt: 'Connect you GPU',
  },
  server_rows: {
    short_peer_id: 'Short Peer ID',
    peer_id: 'Peer ID',
    state: 'State',
    start: 'Start',
    end: 'End',
    throughput: 'Throughput',
    servedBlocks: 'Served Blocks',
    title: 'Server Rows',
  },
  appShare: {
    copyLink: 'Copy Link',
    Linkedin: 'Linkedin',
    Twitter: 'Twitter',
    Facebook: 'Facebook',
    telegram: 'telegram',
  },
  errors: {
    transactionRejectedByUser: 'The transaction request was rejected by the user.',
    serverRejectedRequest: 'The server rejected the request, possibly due to low gas price.',
    contractError: 'An error occurred in the contract execution: {reason}.',
    unknownError: 'An unknown error occurred.',
    networkError: 'There was a problem connecting to the network. Please check your internet connection.',
  },
  placeholderTxt: 'Please Input',
  searchBtnTxt: 'Search',
  actionBtnTxt: 'Operation',
  addBtnTitle: 'Add',
  minuteTxt: 'Tick',
  mgnUnit: 'Gmo',
  placeholderSelect: 'Please Select',
  createTime: 'Create Time',
  cancel: 'Cancel',
  confirm: 'Confirm',
  delete: 'Delete',
  deleteSuccess: 'Delete Success',
  logoutTxt: 'Logout',
  selectiveRecord: 'Please select at least one record',
  operationSuccessfully: 'operation successfully completed',
  doesNotOwnHYPT: '$HYPT Token Holders only Hyperspace',
  doesNotOwnHYPTTxt: 'please get Hypedust token frist！',
  copiedSuccessfully: 'Copied Successfully',
}
